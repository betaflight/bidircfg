# To enable RPM filtering, first apply these settings

# timer and DMA changes for this target. These will ensure that your
# quad can receive telemetry frames on the motor signal lines.

#   PB7,    PC6,    PC7,    PC8,    PC9,    PA8,    PA9,   PA15,    PB1,   ADC
#Score: 18 m: 5, dmatt: 0 emc: 0 lmc: 1, ledmc 0, odmac: 0 adcc: 0 ledc: 0 tc: 0 tcc: 0 nt 3 mxt 1
#T04C2F0,T08C1F1,T08C2F1,T08C3F1,T08C4F1,T01C1F0,T01C2F0,T02C1F0,T03C4F1,ADC3 
#D1S3O0, D2S2O1, D2S3O1, D2S4O1, D2S7O0, D0S0O0, D2S6O0, D1S5O0, D1S2O0, D2 S0 

#Usable motors:  M1-M6. But either M5 or M6

timer c06 1
timer c07 1
timer c08 1

dma pin c06 1
dma pin c07 1
dma pin c08 1

# set looptime to 4k to have enough computational time

set gyro_sync_denom = 2
set pid_process_denom = 1

# Start with dshot 300 which is most robust

set motor_pwm_protocol=DSHOT300

# basic settings required to enable rpm filtering:

set scheduler_optimize_rate=on
set dshot_burst=off
set dshot_bidir=on

# enable debugging for noise assessment

set debug_mode=gyro_scaled

# reconfigure dynamic notch filter to focus on narrow frame resonances
# since motor noise will already be eliminated by the rpm filter.

set dyn_notch_range = medium
set dyn_notch_width_percent = 0
set dyn_notch_q = 250

