# To enable RPM filtering, first apply these settings

# timer and DMA changes for this target. These will ensure that your
# quad can receive telemetry frames on the motor signal lines.

#  PE13,    PB0,    PB1,    PE9,   PE11,   PD12,   PB10,   PB11,    PC6,    PC7,    PA3,    PA2,   ADC
#Score: 209 m: 4, dmatt: 0 emc: 0 lmc: 0, ledmc 0, odmac: 3 adcc: 0 ledc: 0 tc: 20 tcc: 0 nt 6 mxt 2
#T01C3F0,T03C3F1,T03C4F1,T01C1F0,T01C2F0,T04C1F0,T02C3F0,T02C4F0,T08C1F1,T08C2F1,T05C4F1,T09C1F2,ADC1, STX4, 
#D2S6O0, D1S7O0, D1S2O0, D2S3O2, D2S2O1, D1S0O0, D1S1O0, D1S6O1, D2S2O0, D2S2O0, D1S3O1, D0S0O0, D2 S0  , D2S1O0, 
#Usable motors:  M1 M2 M3 M4


timer a03 1

dma pin e13 0
dma pin b11 1
dma pin c07 0
dma pin a03 1

dma adc 1 0

# set looptime to 4k to have enough computational time

set gyro_sync_denom = 2
set pid_process_denom = 1

# Start with dshot 300 which is most robust

set motor_pwm_protocol=DSHOT300

# basic settings required to enable rpm filtering:

set scheduler_optimize_rate=on
set dshot_burst=off
set dshot_bidir=on

# enable debugging for noise assessment

set debug_mode=gyro_scaled

# reconfigure dynamic notch filter to focus on narrow frame resonances
# since motor noise will already be eliminated by the rpm filter.

set dyn_notch_range = medium
set dyn_notch_width_percent = 0
set dyn_notch_q = 250

