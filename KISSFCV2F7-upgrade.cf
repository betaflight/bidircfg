# To enable RPM filtering, first apply these settings

# timer and DMA changes for this target. These will ensure that your
# quad can receive telemetry frames on the motor signal lines.

#   PA2,    PC6,    PA0,    PB8,    PB6,    PB7,    PC7,    PB3,   ADC
#Score: 10 m: 6, dmatt: 0 emc: 0 lmc: 0, ledmc 0, odmac: 1 adcc: 0 ledc: 0 tc: 0 tcc: 0 nt 2 mxt 1
#T09C1F2,T03C1F0,T05C1F1,T04C3F1,T04C1F0,T04C2F0,T03C2F0,T02C2F0,ADC2 
#D0S0O0, D1S4O0, D1S2O0, D1S7O0, D1S0O0, D1S3O0, D1S5O0, D1S6O0, D2 S2 
#Usable motors:  M1 M2 M3 M4 M5 M6

timer c06
timer c07
timer b03

dma pin c06 0
dma pin c07 0
dma pin b03 0

# set looptime to 4k to have enough computational time

set gyro_sync_denom = 2
set pid_process_denom = 1

# Start with dshot 300 which is most robust

set motor_pwm_protocol=DSHOT300

# basic settings required to enable rpm filtering:

set scheduler_optimize_rate=on
set dshot_burst=off
set dshot_bidir=on

# enable debugging for noise assessment

set debug_mode=gyro_scaled

# reconfigure dynamic notch filter to focus on narrow frame resonances
# since motor noise will already be eliminated by the rpm filter.

set dyn_notch_range = medium
set dyn_notch_width_percent = 0
set dyn_notch_q = 250

